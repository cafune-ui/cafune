(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{"8PSi":function(s){s.exports='module.exports = "<h1>定制主题</h1> <p>Cafune UI 支持一定程度的样式定制</p> <h3>全局变量覆盖</h3> <br> Cafune UI 的组件样式是使用 SCSS 编写的，你可以通过以下步骤覆盖主题变量来改变样式 <ol> <li>新建自定义主题文件，并覆写变量</li> </ol> <pre class=language-scss><code class=language-scss><span class=\\"token property\\"><span class=\\"token variable\\">$color_theme_blue</span></span><span class=\\"token punctuation\\">:</span> #369<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">@import</span> <span class=\\"token string\\">\'cafune/lib/index.scss\'</span><span class=\\"token punctuation\\">;</span>\\n</code></pre> <ol start=2> <li>在全局文件中引入自定义主题文件</li> </ol> <pre class=language-js><code class=language-js><span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\'./custom.scss\'</span>\\n</code></pre> <hr/> <h3>按需加载</h3> <ul> <li>修改变量影响所有组件（推荐使用）</li> </ul> <p>在 webpack 中使用<a href=https://github.com/shakacode/sass-resources-loader>sass-resources-loader</a> 引入定制的主题文件即可覆盖掉全局变量</p> <pre class=language-js><code class=language-js>  <span class=\\"token comment\\">//...</span>\\n  test<span class=\\"token punctuation\\">:</span> <span class=\\"token regex\\">/\\\\.scss$/</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token comment\\">// { loader: \'sass-loader\', options: { sourceMap: true } },</span>\\n  <span class=\\"token comment\\">// ...</span>\\n  <span class=\\"token punctuation\\">{</span>\\n    loader<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\'sass-resources-loader\'</span><span class=\\"token punctuation\\">,</span>\\n    options<span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">{</span>\\n      sourceMap<span class=\\"token punctuation\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n      resources<span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token function\\">resolve</span><span class=\\"token punctuation\\">(</span>cwd<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\'src/custom.scss\'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre> <ul> <li>仅修改当前组件</li> </ul> <p>首先需要在<code>babel-plugin-import</code> 选项中将需要定制的组件排除</p> <pre class=language-js><code class=language-js><span class=\\"token punctuation\\">[</span>\\n  require<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">resolve</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\'babel-plugin-import\'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">{</span>\\n    libraryName<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\'cafune\'</span><span class=\\"token punctuation\\">,</span>\\n    libraryDirectory<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\'lib\'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function-variable function\\">style</span><span class=\\"token punctuation\\">:</span> <span class=\\"token parameter\\">name</span> <span class=\\"token operator\\">=></span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token regex\\">/cafune\\\\/lib\\\\/switch/</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">test</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>name<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">/style</span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n</code></pre> <p>然后在组件中用如下方式引入样式文件，即可</p> <pre class=language-js><code class=language-js><span class=\\"token comment\\">// 组件js</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\'./style/custom.scss\'</span><span class=\\"token punctuation\\">;</span>\\n</code></pre> <pre class=language-scss><code class=language-scss><span class=\\"token comment\\">// ./style/custom.scss</span>\\n<span class=\\"token property\\"><span class=\\"token variable\\">$color_theme_blue</span></span><span class=\\"token punctuation\\">:</span> #369<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">@import</span> <span class=\\"token string\\">\'cafune/lib/switch/style\'</span><span class=\\"token punctuation\\">;</span>\\n</code></pre> ";'}}]);