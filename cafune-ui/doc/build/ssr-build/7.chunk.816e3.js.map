{"version":3,"sources":["webpack:///./pages/components/icon/index.js","webpack:///../components/grid/item.jsx","webpack:///../components/grid/index.jsx"],"names":["Item","GridComp","render","IconList","map","item","Component","GridItem","gutter","column","square","prefix","className","ind","icon","text","children","restProps","percent","sty","flexBasis","innerStyle","paddingTop","halfGutter","right","left","top","bottom","height","paddingRight","marginTop","cx","displayName","defaultProps","Grid","getChildContext","props","border","center","renderChildren","length","result","forEach","nodeName","attributes","push"],"mappings":"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","file":"7.chunk.816e3.js","sourcesContent":["import { Grid, Icon } from 'cafune';\nimport { Component } from 'preact';\nconst { Item } = Grid;\nimport IconList from '../icon/list';\n\nexport default class GridComp extends Component {\n  render() {\n    return (\n      <div>\n        <Grid square={false}>\n          {IconList.map(item => (\n            <Item key={item}>\n              <Icon icon={item} />\n              <span>{item}</span>\n            </Item>\n          ))}\n        </Grid>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./pages/components/icon/index.js","import { Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\n/**\n * 宫格单元\n */\nclass GridItem extends Component {\n  static displayName = 'GridItem';\n  static defaultProps = {\n    prefix: 'caf-grid-item'\n  };\n  static propTypes = {\n    /**\n     * 自定义前缀\n     */\n    prefix: PropTypes.string,\n    /**\n     * 列数\n     */\n    icon: PropTypes.string,\n    /**\n     * 是否固定为正方形\n     */\n    text: PropTypes.string\n  };\n  render(\n    { prefix, className, ind, icon, text, children, ...restProps },\n    {},\n    { gutter, column, square }\n  ) {\n    const percent = `${100 / column}%`;\n    const sty = {\n      flexBasis: percent\n    };\n    let innerStyle = {};\n    if (square) {\n      sty.paddingTop = percent;\n      if (gutter) {\n        const halfGutter = gutter / 2;\n        innerStyle = {\n          right: halfGutter,\n          left: halfGutter,\n          top: halfGutter,\n          bottom: halfGutter,\n          height: 'auto'\n        };\n      }\n    } else if (gutter) {\n      sty.paddingRight = gutter;\n      if (ind > column) {\n        sty.marginTop = gutter;\n      }\n    }\n    return (\n      <div className={cx(prefix, className)} style={sty} {...restProps}>\n        <div className={`${prefix}-inner`} style={innerStyle}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\nexport default GridItem;\n\n\n\n// WEBPACK FOOTER //\n// ../components/grid/item.jsx","import { Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Item from './item';\n/**\n * 宫格\n */\nclass Grid extends Component {\n  static Item = Item;\n  static defaultProps = {\n    prefix: 'caf-grid',\n    column: 4,\n    square: true,\n    border: true,\n    center: true,\n    gutter: 0\n  };\n  static propTypes = {\n    /**\n     * 自定义前缀\n     */\n    prefix: PropTypes.string,\n    /**\n     * 列数\n     */\n    column: PropTypes.string,\n    /**\n     * 是否固定为正方形\n     */\n    square: PropTypes.bool,\n    /**\n     * 是否显示边框\n     */\n    border: PropTypes.bool,\n    /**\n     * 是否居中显示\n     */\n    center: PropTypes.bool,\n    /**\n     * 单元格间距\n     */\n    gutter: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  };\n  getChildContext() {\n    const { gutter, border, square, center, column } = this.props;\n    return {\n      gutter,\n      square,\n      border,\n      center,\n      column\n    };\n  }\n  renderChildren() {\n    const { children } = this.props;\n    if (children && children.length) {\n      const result = [];\n      let ind = 0;\n      children.forEach(item => {\n        if (item.nodeName.displayName === 'GridItem') {\n          ind += 1;\n          item.attributes.ind = ind;\n          result.push(item);\n        }\n      });\n      return result;\n    }\n    return null;\n  }\n  render({ prefix, className, square, border, center, gutter, ...restProps }) {\n    return (\n      <div\n        className={cx(prefix, className, {\n          [`${prefix}__square`]: square,\n          [`${prefix}__border`]: border,\n          [`${prefix}__center`]: center,\n          [`${prefix}__surround`]: border && gutter\n        })}\n        {...restProps}\n      >\n        {this.renderChildren()}\n      </div>\n    );\n  }\n}\nexport default Grid;\n\n\n\n// WEBPACK FOOTER //\n// ../components/grid/index.jsx"],"sourceRoot":""}