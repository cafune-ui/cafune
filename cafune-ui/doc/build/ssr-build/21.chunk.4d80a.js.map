{"version":3,"sources":["webpack:///../components/checkbox/group.jsx","webpack:///../components/checkbox/index.jsx","webpack:///./pages/components/checkbox/index.js"],"names":["CheckboxGroup","props","seletedData","canCheck","maxSelect","indexOf","val","length","onChange","valInd","push","splice","handleChange","model","getChildContext","disabled","allDisabled","groupChange","render","prefix","children","className","restProps","cx","Component","defaultProps","isImage","icon","Checkbox","state","checked","onClick","value","context","isCancheck","isDisabled","setState","componentDidMount","isChecked","componentWillReceiveProps","nextProps","id","icons","checkedColor","innerStyle","backgroundColor","isCustomIcon","actived","inactive","CellGroup","CheckboxComp","check","checks","checkList","text","map","item","console","log"],"mappings":"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","file":"21.chunk.4d80a.js","sourcesContent":["import { Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\n/**\n * 复选框\n */\nclass CheckboxGroup extends Component {\n  static defaultProps = {\n    prefix: 'caf-checkbox-group',\n    disabled: false,\n    maxSelect: 0\n  };\n  static propTypes = {\n    /**\n     * 自定义类名\n     */\n    prefix: PropTypes.string,\n    /**\n     * 默认选中项目的id\n     */\n    model: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n    /**\n     * 是否禁用所有复选框\n     */\n    disabled: PropTypes.bool,\n    /**\n     * 最多可选数\n     */\n    maxSelect: PropTypes.number,\n    /**\n     * 复选框组变化回调，参数为所有选中的数据\n     */\n    handleChange: PropTypes.func\n  };\n  constructor(props) {\n    super(props);\n    this.seletedData = props.model;\n  } \n  seletedData = [];\n  canCheck = val => {\n    const { maxSelect } = this.props;\n    const { seletedData } = this;\n    if (maxSelect > 0) {\n      if (seletedData.indexOf(val) === -1 && seletedData.length === maxSelect) {\n        return false;\n      }\n    }\n    return true;\n  };\n  onChange = val => {\n    const { seletedData } = this;\n    const valInd = seletedData.indexOf(val);\n    if (valInd === -1) {\n      seletedData.push(val)\n    } else {\n      seletedData.splice(valInd, 1);\n    }\n    this.seletedData = seletedData;\n    this.props.handleChange && this.props.handleChange(seletedData);\n  };\n  getChildContext() {\n    const { model, disabled } = this.props;\n    return {\n      model,\n      allDisabled: disabled,\n      groupChange: this.onChange,\n      canCheck: this.canCheck\n    };\n  }\n  render({ prefix, children, className, ...restProps }) {\n    return (\n      <div className={cx(prefix, className)} {...restProps}>\n        {children}\n      </div>\n    );\n  }\n}\nexport default CheckboxGroup;\n\n\n\n// WEBPACK FOOTER //\n// ../components/checkbox/group.jsx","import { Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport CheckboxGroup from './group';\nimport Icon from '../icon';\n\nfunction isImage(icon) {\n  return icon && icon.indexOf('/') !== -1;\n}\n\n/**\n * 复选框\n */\nclass Checkbox extends Component {\n  static CheckboxGroup = CheckboxGroup;\n  static defaultProps = {\n    prefix: 'caf-checkbox',\n    checked: false,\n    disabled: false\n  };\n  static propTypes = {\n    /**\n     * 自定义类名\n     */\n    prefix: PropTypes.string,\n    /**\n     * 自定义图标\n     */\n    icons: PropTypes.shape({\n      /**\n       * 激活图标\n       */\n      actived: PropTypes.string,\n      /**\n       * 未激活时图标\n       */\n      inactive: PropTypes.string\n    }),\n    /**\n     * 复选框值\n     */\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    /**\n     * 复选框 id\n      */\n    id: PropTypes.string,\n    /**\n     * 默认是否选中\n     */\n    checked: PropTypes.bool,\n    /**\n     * 选中状态颜色\n     */\n    checkedColor: PropTypes.string,\n    /**\n     * 是否处于禁用状态\n     */\n    disabled: PropTypes.bool,\n    /**\n     * 值变化时回调事件\n     */\n    handleChange: PropTypes.func\n  };\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    checked: false\n  }\n  componentDidMount() {\n    const { value, checked = false } = this.props;\n    const { model = [] } = this.context || {};\n    const isChecked = checked || model.indexOf(value) !== -1;\n\n    this.setState({\n      checked: isChecked\n    })\n  }\n  componentWillReceiveProps(nextProps) {\n    if ('checked' in nextProps && !this.context.model) {\n      this.setState({\n        checked: nextProps.checked\n      });\n    }\n  }\n  onClick = () => {\n    const { value, disabled, handleChange } = this.props;\n    const { groupChange, allDisabled, canCheck } = this.context;\n    const isCancheck = canCheck ? canCheck(value) : true;\n    const isDisabled = disabled || allDisabled || !isCancheck;\n    if (!isDisabled) {\n      this.setState({\n        checked: !this.state.checked\n      });\n      // 框组优先级高于单个，避免逻辑冲突产生问题\n      if (groupChange) {\n        groupChange(value);\n      } else if (handleChange) {\n        handleChange(value);\n      }\n    }\n  };\n  render(\n    {\n      prefix,\n      value,\n      id,\n      className,\n      icons,\n      children,\n      checkedColor,\n      disabled,\n      ...restProps\n    },\n    { checked },\n    { allDisabled = false } = {}\n  ) {\n    const innerStyle = {};\n    if (checkedColor && checked) {\n      innerStyle.backgroundColor = checkedColor;\n    }\n    const isDisabled = disabled || allDisabled;\n    let icon = <Icon icon=\"check\" />;\n    let isCustomIcon = false;\n    if (icons) {\n      if ('actived' in icons && checked) {\n        isCustomIcon = isImage(icons.actived);\n        icon = <Icon icon={icons.actived} size={isCustomIcon ? '14px' : '12px'} />;\n      }\n      if ('inactive' in icons && !checked) {\n        isCustomIcon = isImage(icons.inactive);\n        icon = <Icon icon={icons.inactive} size={isCustomIcon ? '14px' : '12px'} />;\n      }\n    }\n    return (\n      <div\n        className={cx(prefix, className, {\n          [`${prefix}__checked`]: checked,\n          [`${prefix}__disabled`]: isDisabled\n        })}\n        onClick={this.onClick}\n        {...restProps}\n      >\n        <div className={`${prefix}-input`}>\n          <input\n            type=\"checkbox\"\n            id={id}\n            checked={checked}\n            disabled={disabled}\n            value={value}\n          />\n          <span\n            className={cx(`${prefix}-input-inner`, {\n              [`${prefix}-input-inner__custom`]: isCustomIcon\n            })}\n            style={innerStyle}\n          >\n            {icon}\n          </span>\n        </div>\n        <div className={`${prefix}-label`}>{children}</div>\n      </div>\n    );\n  }\n}\nexport default Checkbox;\n\n\n\n// WEBPACK FOOTER //\n// ../components/checkbox/index.jsx","import { Cell, Checkbox } from 'cafune';\nconst { CellGroup } = Cell;\nconst { CheckboxGroup } = Checkbox;\n\nimport { Component } from 'preact';\nexport default class CheckboxComp extends Component {\n  state = {\n    check: 'hi',\n    checks: ['hi', 'hello'],\n    checkList: [\n      {\n        value: 'hi',\n        text: '自定义颜色',\n        checkedColor: '#369'\n      },\n      {\n        value: 'holla',\n        text: '开启禁用',\n        disabled: true\n      },\n      {\n        value: 'bonjour',\n        text: '自定义激活图标',\n        icons: {\n          actived: 'more'\n        }\n      },\n      {\n        value: 'hello',\n        text: '自定义激活及未激活图标',\n        icons: {\n          inactive: 'https://image.flaticon.com/icons/png/128/2026/2026450.png',\n          actived: 'https://image.flaticon.com/icons/png/128/2026/2026462.png'\n        }\n      }\n    ]\n  };\n  render({}, { check, checks, checkList }) {\n    return (\n      <div>\n        <p class=\"caf-demo-title\">单独使用</p>\n        <div class=\"caf-demo-block\">\n          {checkList.map(item => (\n            <Checkbox\n              checked={check === item.value}\n              {...item}\n              handleChange={val => {\n                console.log(val);\n              }}\n              key={`s-${item.value}`}\n            >\n              {item.text}\n            </Checkbox>\n          ))}\n        </div>\n        <p class=\"caf-demo-title\">与Cell 组件一起使用</p>\n        {checkList.map(item => (\n          <Cell\n            title=\"test\"\n            value={\n              <Checkbox\n                checked={check === item.value}\n                {...item}\n                handleChange={val => {\n                  console.log(val);\n                }}\n              >\n                {item.text}\n              </Checkbox>\n            }\n            key={`s-c-${item.id}`}\n          />\n        ))}\n\n        <CellGroup title=\"复选框组\">\n          <CheckboxGroup model={checks} handleChange={val => console.log(val)}>\n            {checkList.map(item => (\n              <Cell\n                title=\"test\"\n                value={<Checkbox {...item}>{item.text}</Checkbox>}\n                key={`g-${item.value}`}\n              />\n            ))}\n          </CheckboxGroup>\n        </CellGroup>\n        <CellGroup title=\"复选框组（最大可选为2）\">\n          <CheckboxGroup\n            model={checks}\n            handleChange={val => console.log(val)}\n            maxSelect={2}\n          >\n            {checkList.map(item => (\n              <Cell\n                title=\"test\"\n                value={<Checkbox {...item}>{item.text}</Checkbox>}\n                key={`g-${item.value}`}\n              />\n            ))}\n          </CheckboxGroup>\n        </CellGroup>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./pages/components/checkbox/index.js"],"sourceRoot":""}