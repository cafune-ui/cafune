(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{Vp0Q:function(n){n.exports='module.exports = "<h1>安装</h1> <pre class=language-bash><code class=language-bash>$ <span class=\\"token function\\">npm</span> <span class=\\"token function\\">install</span> cafune-ui --save\\n</code></pre> <hr/> <h1>引入</h1> <h2>正常引入</h2> <h3>组件引入</h3> <pre class=language-jsx><code class=language-jsx><span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> Button <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\'cafune\'</span><span class=\\"token punctuation\\">;</span>\\n</code></pre> <h3>样式引入</h3> <ol> <li> <p>引入全部样式</p> <pre class=language-jsx><code class=language-jsx><span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\'cafune/style\'</span><span class=\\"token punctuation\\">;</span>\\n</code></pre> </li> <li> <p>引入单个样式</p> <pre class=language-jsx><code class=language-jsx><span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\'cafune/style/button\'</span><span class=\\"token punctuation\\">;</span>\\n</code></pre> </li> </ol> <h2>按需加载</h2> <p><code>cafune</code> 支持使用 <code>babel-plugin-import</code> 来进行按需引入组件的方式</p> <pre class=language-bash><code class=language-bash>$ <span class=\\"token function\\">npm</span> <span class=\\"token function\\">install</span> babel-plugin-import --save-dev\\n</code></pre> <p>在.babelrc 中配置</p> <pre class=language-js><code class=language-js><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token string\\">\\"plugins\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">[</span>\\n    <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"import\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> libraryName<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"cafune\\"</span><span class=\\"token punctuation\\">,</span> style<span class=\\"token punctuation\\">:</span> <span class=\\"token boolean\\">true</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">]</span> <span class=\\"token comment\\">// `style: true` 会加载 scss 文件</span>\\n  <span class=\\"token punctuation\\">]</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre> <p>如果使用 Babel 7，可以在 <code>babel.config.js</code> 中配置</p> <pre class=language-js><code class=language-js>module<span class=\\"token punctuation\\">.</span>exports <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  plugins<span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">[</span>\\n    <span class=\\"token punctuation\\">[</span>\\n      <span class=\\"token string\\">\'import\'</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token punctuation\\">{</span>\\n        libraryName<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\'cafune\'</span><span class=\\"token punctuation\\">,</span>\\n        libraryDirectory<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\'es\'</span><span class=\\"token punctuation\\">,</span>\\n        style<span class=\\"token punctuation\\">:</span> <span class=\\"token boolean\\">true</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token string\\">\'cafune\'</span>\\n    <span class=\\"token punctuation\\">]</span>\\n  <span class=\\"token punctuation\\">]</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre> <p>然后只需引入组件即可，无需再引入样式</p> <pre class=language-jsx><code class=language-jsx><span class=\\"token comment\\">// babel-plugin-import 会帮助你加载 JS 和 CSS</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> Button <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\'cafune\'</span><span class=\\"token punctuation\\">;</span>\\n\\n      ↓ ↓ ↓ ↓ ↓ ↓\\n\\n<span class=\\"token keyword\\">var</span> _button <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\'cafune/lib/button\'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\'cafune/lib/button/style\'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre> <h2>屏幕适配</h2> <p>部分全面屏机型会有底部安全区域，如需适配，需要加入或修改<code>meta</code> 标签中的<code>viewport-fit</code> 属性，<code>Cafune</code> 已经对此做了适配， 如下：</p> <pre class=language-html><code class=language-html><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>meta</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation\\">=</span><span class=\\"token punctuation\\">\\"</span>viewport<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">content</span><span class=\\"token attr-value\\"><span class=\\"token punctuation\\">=</span><span class=\\"token punctuation\\">\\"</span>width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, viewport-fit=cover<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">></span></span>\\n</code></pre> ";'}}]);